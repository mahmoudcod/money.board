import { ApolloWrapper } from "./ApolloWrapper";
import { AuthProvider } from './auth';
import "./globals.css";
import { ApolloClient, InMemoryCache, createHttpLink, gql } from '@apollo/client';

const GET_LOGO = gql`
  query getLogo {
    logo {
      data {
        id
        attributes {
          appName
          description
          favicon {
            data {
              id
              attributes {
                url
              }
            }
          }
          logo {
            data {
              id
              attributes {
                url
              }
            }
          }
        }
      }
    }
  }
`;

// Create a function to get Apollo Client instance
function getApolloClient() {
  return new ApolloClient({
    ssrMode: typeof window === 'undefined',
    link: createHttpLink({
      uri: 'https://money-api.ektesad.com/graphql',
      credentials: 'same-origin',
    }),
    cache: new InMemoryCache(),
  });
}

export async function generateMetadata() {
  const client = getApolloClient();
  try {
    const { data } = await client.query({ query: GET_LOGO });

    const logoData = data?.logo?.data?.attributes;

    return {
      title: `  لوحة التحكم - ${logoData?.appName} ` || "لوحة التحكم",
      description: logoData?.description || "Generated by mahmoud.code",
      icons: {
        icon: logoData?.favicon?.data?.attributes?.url || "/favicon.svg"
      },
    };
  } catch (error) {
    console.error('Error fetching metadata:', error);
    return {
      title: "لوحة التحكم",
      description: "Generated by mahmoud.code",
      icons: {
        icon: "/favicon.svg"
      },
    };
  }
}

export default function RootLayout({ children }) {
  return (
    <html lang="ar" dir="rtl">
      <AuthProvider>
        <ApolloWrapper>
          <body>
            {children}
          </body>
        </ApolloWrapper>
      </AuthProvider>
    </html>
  );
}